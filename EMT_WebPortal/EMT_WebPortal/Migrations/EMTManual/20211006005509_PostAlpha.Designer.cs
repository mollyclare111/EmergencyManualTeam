// <auto-generated />
using System;
using EMT_WebPortal.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EMT_WebPortal.Migrations.EMTManual
{
    [DbContext(typeof(EMTManualContext))]
    [Migration("20211006005509_PostAlpha")]
    partial class PostAlpha
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EMT_WebPortal.Models.Chart", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsQuickLink")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("ID");

                    b.ToTable("Chart");
                });

            modelBuilder.Entity("EMT_WebPortal.Models.Guideline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Background")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Checklist")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Guideline");
                });

            modelBuilder.Entity("EMT_WebPortal.Models.Medication", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdultDosage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdverseEffects")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChildDosage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contraindication")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Indication")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Precaution")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProtocolID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProtocolID");

                    b.ToTable("Medication");
                });

            modelBuilder.Entity("EMT_WebPortal.Models.PhoneNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("hospitalName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numberString")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PhoneNumber");
                });

            modelBuilder.Entity("EMT_WebPortal.Models.Protocol", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Certification")
                        .HasColumnType("int");

                    b.Property<int?>("ChartID")
                        .HasColumnType("int");

                    b.Property<int>("GuidelineId")
                        .HasColumnType("int");

                    b.Property<bool>("HasAssociatedMedication")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("OLMCRequired")
                        .HasColumnType("bit");

                    b.Property<string>("OtherInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientType")
                        .HasColumnType("int");

                    b.Property<string>("TreatmentPlan")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ChartID");

                    b.HasIndex("GuidelineId");

                    b.ToTable("Protocol");
                });

            modelBuilder.Entity("EMT_WebPortal.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Admin")
                        .HasColumnType("bit");

                    b.Property<string>("Certification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("EMT_WebPortal.Models.Medication", b =>
                {
                    b.HasOne("EMT_WebPortal.Models.Protocol", null)
                        .WithMany("Medications")
                        .HasForeignKey("ProtocolID");
                });

            modelBuilder.Entity("EMT_WebPortal.Models.Protocol", b =>
                {
                    b.HasOne("EMT_WebPortal.Models.Chart", "Chart")
                        .WithMany()
                        .HasForeignKey("ChartID");

                    b.HasOne("EMT_WebPortal.Models.Guideline", "Guideline")
                        .WithMany("Protocols")
                        .HasForeignKey("GuidelineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chart");

                    b.Navigation("Guideline");
                });

            modelBuilder.Entity("EMT_WebPortal.Models.Guideline", b =>
                {
                    b.Navigation("Protocols");
                });

            modelBuilder.Entity("EMT_WebPortal.Models.Protocol", b =>
                {
                    b.Navigation("Medications");
                });
#pragma warning restore 612, 618
        }
    }
}
